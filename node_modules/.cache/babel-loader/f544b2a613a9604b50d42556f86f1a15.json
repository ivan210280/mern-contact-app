{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\socialnetwork\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../Layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport { getProfileById } from '../../actions/profileAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  getProfileById,\n  match,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back to Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), auth.isA]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 58\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/socialnetwork/client/src/components/profile/Profile.js"],"names":["React","useEffect","PropTypes","connect","Spinner","Link","getProfileById","Profile","match","profile","loading","auth","params","id","isA","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,6BAA/B;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAED,EAAAA,cAAF;AAAkBE,EAAAA,KAAlB;AAAyBC,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAlC;AAAsDC,EAAAA;AAAtD,CAAD,KAAkE;AAAA;;AAE9EV,EAAAA,SAAS,CAAC,MAAM;AAEZK,IAAAA,cAAc,CAACE,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAd;AAEH,GAJQ,EAIN,CAACP,cAAD,CAJM,CAAT;AAMA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,cACKG,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBAA8B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAA9B,gBAA4C,QAAC,KAAD,CAAO,QAAP;AAAA,8BAEzC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAqB,QAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFyC,EAIxCC,IAAI,CAACG,GAJmC;AAAA;AAAA;AAAA;AAAA;AAAA;AADjD;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAnBD;;GAAMP,O;;KAAAA,O;AAqBNA,OAAO,CAACQ,SAAR,GAAoB;AAEhBT,EAAAA,cAAc,EAAEJ,SAAS,CAACc,IAAV,CAAeC,UAFf;AAGhBR,EAAAA,OAAO,EAAEP,SAAS,CAACgB,MAAV,CAAiBD,UAHV;AAIhBN,EAAAA,IAAI,EAAET,SAAS,CAACgB,MAAV,CAAiBD;AAJP,CAApB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAE9BX,EAAAA,OAAO,EAAEW,KAAK,CAACX,OAFe;AAG9BE,EAAAA,IAAI,EAAES,KAAK,CAACT;AAHkB,CAAL,CAA7B;;AASA,eAAeR,OAAO,CAACgB,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA8CC,OAA9C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../Layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport { getProfileById } from '../../actions/profileAction';\r\n\r\nconst Profile = ({ getProfileById, match, profile: {profile, loading}, auth }) => {\r\n\r\n    useEffect(() => {\r\n\r\n        getProfileById(match.params.id);\r\n\r\n    }, [getProfileById]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {profile === null || loading ? <Spinner /> : <React.Fragment>\r\n                \r\n                <Link to='/profiles' className=\"btn btn-light\">Back to Profiles</Link>\r\n\r\n                {auth.isA}\r\n\r\n                </React.Fragment>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\n    \r\n\r\n\r\nexport default connect(mapStateToProps, { getProfileById }) (Profile);\r\n"]},"metadata":{},"sourceType":"module"}