{"ast":null,"code":"import { ADD_POST, DELETE_POST, GET_POST, GET_POSTS, POST_ERROR, REMOVE_COMMENT, UPDATE_LIKES, ADD_COMMENT } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: false,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: action.payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: action.payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [action.payload, ...state.posts],\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        comment: action.payload\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload.id ? { ...post,\n          likes: action.payload.likes\n        } : post),\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload.id),\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Dell/Desktop/socialnetwork/client/src/reducers/postReducer.js"],"names":["ADD_POST","DELETE_POST","GET_POST","GET_POSTS","POST_ERROR","REMOVE_COMMENT","UPDATE_LIKES","ADD_COMMENT","initialState","posts","post","loading","error","state","action","type","payload","comment","map","_id","id","likes","filter"],"mappings":"AAAA,SAEIA,QAFJ,EAGIC,WAHJ,EAIIC,QAJJ,EAKIC,SALJ,EAMIC,UANJ,EAOIC,cAPJ,EAQIC,YARJ,EASIC,WATJ,QAaO,kBAbP;AAeA,MAAMC,YAAY,GAAG;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,IAAI,EAAE,IAHW;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AAElD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKZ,SAAL;AAEA,aAAO,EAEH,GAAGU,KAFA;AAGHJ,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAHX;AAIHL,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAOA,SAAKT,QAAL;AAEA,aAAO,EAEH,GAAGW,KAFA;AAGHH,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAHV;AAIHL,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAOA,SAAKX,QAAL;AAEA,aAAO,EAEH,GAAGa,KAFA;AAGHJ,QAAAA,KAAK,EAAE,CAAEK,MAAM,CAACE,OAAT,EAAkB,GAAGH,KAAK,CAACJ,KAA3B,CAHJ;AAIHE,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAOA,SAAKJ,WAAL;AAEA,aAAO,EAEH,GAAGM,KAFA;AAGHI,QAAAA,OAAO,EAAEH,MAAM,CAACE;AAHb,OAAP;;AAMA,SAAKV,YAAL;AAEA,aAAO,EAEH,GAAGO,KAFA;AAGHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYS,GAAZ,CAAgBR,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeI,EAA5B,GAE3B,EAAC,GAAGV,IAAJ;AAAUW,UAAAA,KAAK,EAAEP,MAAM,CAACE,OAAP,CAAeK;AAAhC,SAF2B,GAEcX,IAFtC,CAHJ;AAMHC,QAAAA,OAAO,EAAE;AANN,OAAP;;AASA,SAAKV,WAAL;AAEA,aAAO,EAEH,GAAGY,KAFA;AAGHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYa,MAAZ,CAAmBZ,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeI,EAAvD,CAHJ;AAIHT,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAOA,SAAKN,cAAL;AAEA,aAAO,EAEH,GAAGQ;AAFA,OAAP;;AAOA,SAAKT,UAAL;AAEA,aAAO,EAEH,GAAGS,KAFA;AAGHD,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAHX;AAIHL,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAOA;AAEA,aAAOE,KAAP;AA7EJ;AA+EH","sourcesContent":["import {\r\n\r\n    ADD_POST,\r\n    DELETE_POST,\r\n    GET_POST,\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    REMOVE_COMMENT,\r\n    UPDATE_LIKES,\r\n    ADD_COMMENT\r\n    \r\n    \r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n\r\n    posts: [],\r\n    post: null,\r\n    loading: false,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n\r\n    switch(action.type) {\r\n\r\n        case GET_POSTS:\r\n\r\n        return {\r\n\r\n            ...state,\r\n            posts: action.payload,\r\n            loading: false\r\n        }\r\n\r\n        case GET_POST: \r\n\r\n        return {\r\n\r\n            ...state,\r\n            post: action.payload,\r\n            loading: false\r\n        }\r\n\r\n        case ADD_POST:\r\n\r\n        return {\r\n\r\n            ...state,\r\n            posts: [ action.payload, ...state.posts ],\r\n            loading: false\r\n        }\r\n\r\n        case ADD_COMMENT: \r\n\r\n        return {\r\n\r\n            ...state,\r\n            comment: action.payload\r\n        }\r\n\r\n        case UPDATE_LIKES:\r\n\r\n        return {\r\n\r\n            ...state,\r\n            posts: state.posts.map(post => post._id === action.payload.id ? \r\n                \r\n                {...post, likes: action.payload.likes} : post),\r\n            loading: false\r\n        }\r\n\r\n        case DELETE_POST:\r\n\r\n        return {\r\n\r\n            ...state,\r\n            posts: state.posts.filter(post => post._id !== action.payload.id),\r\n            loading: false\r\n        }\r\n\r\n        case REMOVE_COMMENT: \r\n\r\n        return {\r\n\r\n            ...state,\r\n\r\n        }\r\n\r\n\r\n        case POST_ERROR:\r\n\r\n        return {\r\n\r\n            ...state,\r\n            error: action.payload,\r\n            loading: false\r\n        }\r\n\r\n        default:\r\n\r\n        return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}