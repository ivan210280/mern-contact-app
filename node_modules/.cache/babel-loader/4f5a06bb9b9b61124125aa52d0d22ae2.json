{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alertAction';\nimport setAuthToken from '../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from './types'; // Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config); //const data = await response.json();\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n};","map":{"version":3,"sources":["C:/Users/Dell/Desktop/socialnetwork/client/src/actions/authAction.js"],"names":["axios","setAlert","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg","loadUser","localStorage","token"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAEIC,gBAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,UALJ,QAOO,SAPP,C,CAUA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAA6B,MAAMC,QAAN,IAAkB;AAEpE,QAAMC,MAAM,GAAG;AAEdC,IAAAA,OAAO,EAAE;AAEL,sBAAgB;AAFX;AAFK,GAAf;AAQD,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACR,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAf,CAAb;;AAEC,MAAI;AAEH,UAAMO,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB,CAFG,CAIH;;AAEAD,IAAAA,QAAQ,CAAC;AAELQ,MAAAA,IAAI,EAAEhB,gBAFD;AAGLiB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAHR,KAAD,CAAR;AAOA,GAbD,CAaE,OAAOC,GAAP,EAAY;AAEb,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,QAAGA,MAAH,EAAW;AAEPA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIf,QAAQ,CAACV,QAAQ,CAACyB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAGDhB,IAAAA,QAAQ,CAAC;AAELQ,MAAAA,IAAI,EAAEf;AAFD,KAAD,CAAR;AAOA;AACH,CA3CM,C,CA8CP;;AACA,OAAO,MAAMwB,QAAQ,GAAG,MAAM,MAAMjB,QAAN,IAAkB;AAE5C,MAAGkB,YAAY,CAACC,KAAhB,EAAuB;AAEnB5B,IAAAA,YAAY,CAAC2B,YAAY,CAACC,KAAd,CAAZ;AACH;AAEJ,CAPM","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alertAction';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport {\r\n\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR\r\n\r\n} from './types';\r\n\r\n\r\n// Register User\r\nexport const register = ({name, email, password}) => async dispatch => {\r\n\r\n   const config = {\r\n\r\n    headers: {\r\n\r\n        'Content-Type': 'application/json'\r\n    }\r\n   }\r\n\r\n  const body = JSON.stringify({name, email, password})\r\n\r\n   try {\r\n\r\n    const res = await axios.post('/api/users', body, config);\r\n\r\n    //const data = await response.json();\r\n\r\n    dispatch({\r\n\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n\r\n    })\r\n       \r\n   } catch (err) {\r\n\r\n    const errors = err.response.data.errors;\r\n\r\n    if(errors) {\r\n\r\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    \r\n    dispatch({\r\n\r\n        type: REGISTER_FAIL\r\n        \r\n    })\r\n    \r\n       \r\n   }\r\n}\r\n\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n\r\n    if(localStorage.token) {\r\n\r\n        setAuthToken(localStorage.token)\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}