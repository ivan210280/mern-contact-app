{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\socialnetwork\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../Layout/Spinner';\nimport { getProfileById } from '../../actions/profileAction';\nimport ProfileTop from './ProfileTop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  getProfileById,\n  match,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-primary\",\n        children: \"Back to Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 10\n      }, this), auth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this); // return profile ? (\n  //     <React.Fragment>\n  //               <div className=\"profile-grid my-1\">\n  //                    <ProfileTop profile={ profile }/>\n  //                </div>  \n  //                </React.Fragment>\n  // ) : null;\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/socialnetwork/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Link","Spinner","getProfileById","ProfileTop","Profile","match","profile","loading","auth","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEF,EAAAA,cAAF;AAAkBG,EAAAA,KAAlB;AAAyBC,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAlC;AAAsDC,EAAAA;AAAtD,CAAD,KAAkE;AAAA;;AAE9EX,EAAAA,SAAS,CAAC,MAAM;AAEZK,IAAAA,cAAc,CAACG,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAd;AAEH,GAJQ,EAIN,CAACR,cAAD,EAAiBG,KAAK,CAACI,MAAN,CAAaC,EAA9B,CAJM,CAAT;AAOJ,sBAEI,QAAC,KAAD,CAAO,QAAP;AAAA,cACKJ,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBAA8B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAA9B,gBAA4C,QAAC,KAAD,CAAO,QAAP;AAAA,8BAE5C,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAqB,QAAA,SAAS,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAF4C,EAI3CC,IAJ2C;AAAA;AAAA;AAAA;AAAA;AAAA;AADjD;AAAA;AAAA;AAAA;AAAA,UAFJ,CATkF,CAqB9E;AAGA;AAEA;AACA;AACA;AAEA;AAEA;AAGF,CAnCF;;GAAMJ,O;;KAAAA,O;AAsCNA,OAAO,CAACO,SAAR,GAAoB;AAEhBT,EAAAA,cAAc,EAAEJ,SAAS,CAACc,IAAV,CAAeC,UAFf;AAGhBP,EAAAA,OAAO,EAAER,SAAS,CAACgB,MAAV,CAAiBD,UAHV;AAIhBL,EAAAA,IAAI,EAAEV,SAAS,CAACgB,MAAV,CAAiBD;AAJP,CAApB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAE9BV,EAAAA,OAAO,EAAEU,KAAK,CAACV,OAFe;AAG9BE,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AAHkB,CAAL,CAA7B;;AASA,eAAeT,OAAO,CAACgB,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA8CE,OAA9C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../Layout/Spinner';\r\nimport { getProfileById } from '../../actions/profileAction';\r\nimport ProfileTop from './ProfileTop';\r\n\r\nconst Profile = ({ getProfileById, match, profile: {profile, loading}, auth }) => {\r\n\r\n    useEffect(() => {\r\n\r\n        getProfileById(match.params.id);\r\n\r\n    }, [getProfileById, match.params.id]);\r\n\r\n\r\nreturn(\r\n\r\n    <React.Fragment>\r\n        {profile === null || loading ? <Spinner/> : (<React.Fragment>\r\n\r\n         <Link to='/profiles' className=\"btn btn-primary\">Back to Profiles</Link>\r\n\r\n         {auth}\r\n        </React.Fragment>)}\r\n    </React.Fragment>\r\n)\r\n\r\n    // return profile ? (\r\n\r\n\r\n    //     <React.Fragment>\r\n                     \r\n    //               <div className=\"profile-grid my-1\">\r\n    //                    <ProfileTop profile={ profile }/>\r\n    //                </div>  \r\n\r\n    //                </React.Fragment>\r\n\r\n    // ) : null;\r\n       \r\n\r\n }\r\n     \r\n\r\nProfile.propTypes = {\r\n\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\n    \r\n\r\n\r\nexport default connect(mapStateToProps, { getProfileById }) (Profile);\r\n"]},"metadata":{},"sourceType":"module"}