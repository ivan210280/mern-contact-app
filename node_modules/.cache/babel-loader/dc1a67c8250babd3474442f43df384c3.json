{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\socialnetwork\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike } from '../../actions/postAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostItem = ({\n  auth,\n  addLike,\n  removeLike,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post bg-profile p-1 my-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"profile.html\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"round-img\",\n          src: avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"my-1 text-dark\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-date\",\n        children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"YYYY/MM/DD\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => addLike(_id),\n        type: \"button\",\n        className: \"btn btn-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-thumbs-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          children: likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => removeLike(),\n        type: \"button\",\n        className: \"btn btn-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-thumbs-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/post/${_id}`,\n        className: \"btn btn-primary\",\n        children: [\"Discussion \", comments.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-count\",\n          children: comments.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-trash-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PostItem;\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/socialnetwork/client/src/components/posts/PostItem.js"],"names":["React","PropTypes","Link","Moment","connect","addLike","removeLike","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","event","length","loading","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike } from '../../actions/postAction';\r\n\r\nconst PostItem = ({auth, addLike, removeLike, post: {\r\n\r\n    _id,\r\n    text,\r\n    name,\r\n    avatar,\r\n    user,\r\n    likes,\r\n    comments,\r\n    date\r\n}}) => {\r\n    return (\r\n        \r\n        <div className=\"post bg-profile p-1 my-1\">\r\n          <div>\r\n            <a href=\"profile.html\">\r\n              <img\r\n                className=\"round-img\"\r\n                src={ avatar }\r\n                alt=\"\"\r\n              />\r\n              <h4>{name  }</h4>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <p className=\"my-1 text-dark\">\r\n              { text }\r\n            </p>\r\n             <p className=\"post-date\">\r\n                Posted on <Moment format=\"YYYY/MM/DD\">{ date }</Moment>\r\n            </p>\r\n            <button onClick={event => addLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"fas fa-thumbs-up\"></i>{' '}\r\n              <span>{likes.length > 0 && <span>{ likes.length }</span>}</span>\r\n            </button>\r\n            <button onClick={event => removeLike()} type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"fas fa-thumbs-down\"></i>\r\n            </button>\r\n            <Link to={`/post/${_id}`} className=\"btn btn-primary\">\r\n\r\n\r\n              Discussion {comments.length > 0 && (\r\n\r\n              <span className='comment-count'>{ comments.length }</span>\r\n              )}\r\n            </Link>\r\n\r\n            { !auth.loading && user === auth.user._id && (\r\n\r\n                <button      \r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                >\r\n                <i className=\"fas fa-trash-alt\"></i>\r\n                </button>\r\n            )}\r\n\r\n           \r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostItem.propTypes = {\r\n\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike }) (PostItem);\r\n"]},"metadata":{},"sourceType":"module"}