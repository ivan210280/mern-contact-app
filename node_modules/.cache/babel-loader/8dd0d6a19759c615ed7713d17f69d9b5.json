{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\socialnetwork\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profileAction';\nimport Spinner from '../Layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileGithub = ({\n  getGithubRepos,\n  username,\n  repos\n}) => {\n  _s();\n\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \"Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-profile p-1 m-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-primary\",\n            children: [\"Stars: \", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-dark\",\n            children: [\"Stars: \", repo.watchers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-primary\",\n            children: [\"Stars: \", repo.s_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, repo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/socialnetwork/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","getGithubRepos","Spinner","ProfileGithub","username","repos","map","repo","html_url","name","description","stargazers_count","watchers_count","s_count","_id","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEF,EAAAA,cAAF;AAAkBG,EAAAA,QAAlB;AAA4BC,EAAAA;AAA5B,CAAD,KAAyC;AAAA;;AAE3DP,EAAAA,SAAS,CAAC,MAAM;AAEZG,IAAAA,cAAc,CAACG,QAAD,CAAd;AAEH,GAJQ,EAIN,CAACH,cAAD,CAJM,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGCI,KAAK,KAAK,IAAV,gBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAjB,GAEGA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBAEV;AAAoB,MAAA,SAAS,EAAC,yBAA9B;AAAA,8BAEA;AAAA,gCACI;AAAA,iCACI;AAAG,YAAA,IAAI,EAAEA,IAAI,CAACC,QAAd;AAAwB,YAAA,MAAM,EAAC,QAA/B;AAAwC,YAAA,GAAG,EAAC,qBAA5C;AAAA,sBAAoED,IAAI,CAACE;AAAzE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,oBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAWA;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA,kCACaH,IAAI,CAACI,gBADlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAI,YAAA,SAAS,EAAC,kBAAd;AAAA,kCACaJ,IAAI,CAACK,cADlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA,kCACaL,IAAI,CAACM,OADlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA,OAAUN,IAAI,CAACO,GAAf;AAAA;AAAA;AAAA;AAAA,YAFJ,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CAjDD;;GAAMX,a;;KAAAA,a;AAmDNA,aAAa,CAACY,SAAd,GAA0B;AAEtBd,EAAAA,cAAc,EAAEF,SAAS,CAACiB,IAAV,CAAeC,UAFT;AAGtBZ,EAAAA,KAAK,EAAEN,SAAS,CAACmB,KAAV,CAAgBD,UAHD;AAItBb,EAAAA,QAAQ,EAAEL,SAAS,CAACoB,MAAV,CAAiBF;AAJL,CAA1B;;AAQA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAE9BhB,EAAAA,KAAK,EAAEgB,KAAK,CAACC,OAAN,CAAcjB;AAFS,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAA8CE,aAA9C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profileAction';\r\nimport Spinner from '../Layout/Spinner';\r\n\r\nconst ProfileGithub = ({ getGithubRepos, username, repos }) => {\r\n\r\n    useEffect(() => {\r\n\r\n        getGithubRepos(username);\r\n\r\n    }, [getGithubRepos]);\r\n\r\n    return (\r\n        <div className=\"profile-github\">\r\n          <h2 className=\"text-primary my-1\">Github Repos</h2>  \r\n\r\n        {repos === null ? <Spinner /> : (\r\n\r\n            repos.map(repo => (\r\n\r\n                <div key={repo._id} className=\"repo bg-profile p-1 m-1\">\r\n                  \r\n                <div>\r\n                    <h4>\r\n                        <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{ repo.name }</a>\r\n                    </h4>\r\n\r\n                    <p>{ repo.description }</p>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                    <ul>\r\n                        <li className=\"badge badge-primary\">\r\n                            Stars: { repo.stargazers_count }\r\n                        </li>\r\n\r\n                        <li className=\"badge badge-dark\">\r\n                            Stars: { repo.watchers_count }\r\n                        </li>\r\n\r\n                        <li className=\"badge badge-primary\">\r\n                            Stars: { repo.s_count }\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                </div>\r\n            ))\r\n        )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    repos: state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos }) (ProfileGithub);\r\n"]},"metadata":{},"sourceType":"module"}