{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\socialnetwork\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../Layout/Spinner';\nimport { getProfileById } from '../../actions/profileAction';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  getProfileById,\n  match,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-primary\",\n        children: \"Back to Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 10\n      }, this), auth.isAuth && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-profile\",\n        className: \"btn btn-primary my-2\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-grid my-1\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), \".profile-exp.bg-white.p-2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this); // return profile ? (\n  //     <React.Fragment>\n  //               \n  //                </React.Fragment>\n  // ) : null;\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/socialnetwork/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Link","Spinner","getProfileById","ProfileTop","ProfileAbout","Profile","match","profile","loading","auth","params","id","isAuth","user","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEH,EAAAA,cAAF;AAAkBI,EAAAA,KAAlB;AAAyBC,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAlC;AAAsDC,EAAAA;AAAtD,CAAD,KAAkE;AAAA;;AAE9EZ,EAAAA,SAAS,CAAC,MAAM;AAEZK,IAAAA,cAAc,CAACI,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAd;AAEH,GAJQ,EAIN,CAACT,cAAD,EAAiBI,KAAK,CAACI,MAAN,CAAaC,EAA9B,CAJM,CAAT;AAOJ,sBAEI,QAAC,KAAD,CAAO,QAAP;AAAA,cACKJ,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBAA8B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAA9B,gBAA4C,QAAC,KAAD,CAAO,QAAP;AAAA,8BAE5C,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAqB,QAAA,SAAS,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAF4C,EAM3CC,IAAI,CAACG,MAAL,IACAH,IAAI,CAACD,OAAL,KAAiB,KADjB,IAECC,IAAI,CAACI,IAAL,CAAUC,GAAV,KAAkBP,OAAO,CAACM,IAAR,CAAaC,GAFhC,iBAGE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,eAAT;AAAyB,QAAA,SAAS,EAAC,sBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATyC,eAWzC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACA,QAAC,UAAD;AAAY,UAAA,OAAO,EAAGP;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXyC;AAAA;AAAA;AAAA;AAAA;AAAA;AADjD;AAAA;AAAA;AAAA;AAAA,UAFJ,CATkF,CAmC9E;AAGA;AAEA;AAEA;AAEA;AAGF,CA/CF;;GAAMF,O;;KAAAA,O;AAkDNA,OAAO,CAACU,SAAR,GAAoB;AAEhBb,EAAAA,cAAc,EAAEJ,SAAS,CAACkB,IAAV,CAAeC,UAFf;AAGhBV,EAAAA,OAAO,EAAET,SAAS,CAACoB,MAAV,CAAiBD,UAHV;AAIhBR,EAAAA,IAAI,EAAEX,SAAS,CAACoB,MAAV,CAAiBD;AAJP,CAApB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAE9Bb,EAAAA,OAAO,EAAEa,KAAK,CAACb,OAFe;AAG9BE,EAAAA,IAAI,EAAEW,KAAK,CAACX;AAHkB,CAAL,CAA7B;;AASA,eAAeV,OAAO,CAACoB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA8CG,OAA9C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../Layout/Spinner';\r\nimport { getProfileById } from '../../actions/profileAction';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\n\r\nconst Profile = ({ getProfileById, match, profile: {profile, loading}, auth }) => {\r\n\r\n    useEffect(() => {\r\n\r\n        getProfileById(match.params.id);\r\n\r\n    }, [getProfileById, match.params.id]);\r\n\r\n\r\nreturn(\r\n\r\n    <React.Fragment>\r\n        {profile === null || loading ? <Spinner/> : (<React.Fragment>\r\n           \r\n         <Link to='/profiles' className=\"btn btn-primary\"> \r\n          Back to Profiles \r\n          </Link>  \r\n\r\n         {auth.isAuth &&\r\n          auth.loading === false &&\r\n           auth.user._id === profile.user._id && \r\n           (<Link to='/edit-profile' className=\"btn btn-primary my-2\">Edit Profile</Link>)}\r\n            \r\n            <div className=\"profile-grid my-1\">\r\n            <ProfileTop profile={ profile }/>\r\n            <ProfileAbout profile={profile} />\r\n\r\n            .profile-exp.bg-white.p-2\r\n            </div>   \r\n       \r\n\r\n        </React.Fragment>)}\r\n    </React.Fragment>\r\n)\r\n\r\n    // return profile ? (\r\n\r\n\r\n    //     <React.Fragment>\r\n                     \r\n    //               \r\n\r\n    //                </React.Fragment>\r\n\r\n    // ) : null;\r\n       \r\n\r\n }\r\n     \r\n\r\nProfile.propTypes = {\r\n\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\n    \r\n\r\n\r\nexport default connect(mapStateToProps, { getProfileById }) (Profile);\r\n"]},"metadata":{},"sourceType":"module"}