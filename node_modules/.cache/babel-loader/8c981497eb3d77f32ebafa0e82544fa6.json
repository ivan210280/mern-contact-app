{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\socialnetwork\\\\client\\\\src\\\\components\\\\Auth\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { setAlert } from \"../../actions/alertAction\";\nimport { register } from \"../../actions/authAction\";\nimport PropTypes from 'prop-types';\nimport authReducer from \"../../reducers/authReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = ({\n  isAuth,\n  register\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const {\n    name,\n    email,\n    password\n  } = formData;\n\n  const onChange = event => {\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    register({\n      name,\n      email,\n      password\n    });\n  }; // Redirect if we register\n\n\n  if (isAuth) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 27\n        }, this), \" Create Your Account\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: event => onSubmit(event),\n        action: \"create-profile.html\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name\",\n            value: name,\n            onChange: event => onChange(event),\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email Address\",\n            value: email,\n            onChange: event => onChange(event),\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text\",\n            children: \"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            value: password,\n            onChange: event => onChange(event) //required\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          value: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"my-1\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Register, \"POKy4u9jXFh/Reja0jFkWqYIY+I=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuth: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  isAuth: state.auth.isAuth;\n};\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/socialnetwork/client/src/components/Auth/Register.js"],"names":["React","useState","Link","Redirect","connect","setAlert","register","PropTypes","authReducer","Register","isAuth","formData","setFormData","name","email","password","onChange","event","target","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from \"../../actions/alertAction\";\r\nimport { register } from \"../../actions/authAction\";\r\nimport PropTypes from 'prop-types';\r\nimport authReducer from \"../../reducers/authReducer\";\r\n\r\n\r\nconst Register = ({isAuth, register}) => {\r\n\r\nconst [ formData, setFormData ] = useState({\r\n\r\n  name: '',\r\n  email: '',\r\n  password: ''\r\n\r\n});\r\n\r\nconst { name, email, password } = formData;\r\n\r\nconst onChange = event => {\r\n\r\n  setFormData({\r\n\r\n    ...formData,\r\n    [event.target.name]: event.target.value\r\n  })\r\n}\r\n\r\nconst onSubmit =  event => {\r\n\r\n  event.preventDefault();\r\n\r\n register({ name, email, password });\r\n  \r\n}\r\n\r\n// Redirect if we register\r\nif(isAuth) {\r\n\r\n  return(\r\n\r\n    <Redirect to=\"/dashboard\" />\r\n  )\r\n}\r\n\r\nreturn (\r\n\r\n  <React.Fragment>\r\n    <div className=\"card\">\r\n   <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\"><i class=\"fas fa-user\"></i> Create Your Account</p>\r\n      <form className=\"form\" onSubmit={event => onSubmit(event)} action=\"create-profile.html\">\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Name\" value={ name } onChange={event => onChange(event)} name=\"name\"   />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"email\" placeholder=\"Email Address\" value={ email } onChange={event => onChange(event)} name=\"email\"  />\r\n          <small className=\"form-text\"\r\n            >This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            \r\n            value={ password }\r\n            onChange={event => onChange(event)}\r\n            //required\r\n          />\r\n        </div>\r\n        {/* <div class=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            minLength=\"6\"\r\n          />\r\n        </div> */}\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p class=\"my-1\">\r\n        Already have an account? <Link to=\"/register\">Sign In</Link>\r\n      </p>\r\n      </div>\r\n  </React.Fragment>\r\n\r\n);\r\n};\r\n\r\nRegister.propTypes = {\r\n\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuth: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n  isAuth: state.auth.isAuth\r\n}\r\n\r\nexport default connect(mapStateToProps, {setAlert, register}) (Register);\r\n"]},"metadata":{},"sourceType":"module"}