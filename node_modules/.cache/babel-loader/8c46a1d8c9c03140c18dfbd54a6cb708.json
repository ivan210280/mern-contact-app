{"ast":null,"code":"const jwt = require('jsonwebtoken');\n\nconst config = require('config');\n\nmodule.exports = function (req, res, next) {\n  //Get token from header\n  const token = req.header('x-auth-token'); //Check if not token\n\n  if (!token) {\n    return res.status(401).json({\n      message: 'No token, authorization denied'\n    });\n  } //Verify token\n\n\n  try {\n    const decoded = jwt.verify(token, config.get('jwtSecret'));\n    req.user = decoded.user;\n    next();\n  } catch (err) {\n    res.status(401).json({\n      message: 'Token is not valid'\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Dell/Desktop/socialnetwork/middleware/auth.js"],"names":["jwt","require","config","module","exports","req","res","next","token","header","status","json","message","decoded","verify","get","user","err"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAEtC;AACA,QAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,cAAX,CAAd,CAHsC,CAKtC;;AACA,MAAG,CAACD,KAAJ,EAAW;AAEP,WAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAP;AACH,GATqC,CAWtC;;;AACA,MAAI;AAEA,UAAMC,OAAO,GAAGb,GAAG,CAACc,MAAJ,CAAWN,KAAX,EAAkBN,MAAM,CAACa,GAAP,CAAW,WAAX,CAAlB,CAAhB;AAEAV,IAAAA,GAAG,CAACW,IAAJ,GAAWH,OAAO,CAACG,IAAnB;AACAT,IAAAA,IAAI;AAGP,GARD,CAQC,OAAMU,GAAN,EAAW;AAEVX,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD;AAEJ,CAzBD","sourcesContent":["const jwt = require('jsonwebtoken');\r\nconst config = require('config');\r\n\r\nmodule.exports = function(req, res, next) {\r\n\r\n    //Get token from header\r\n    const token = req.header('x-auth-token');\r\n\r\n    //Check if not token\r\n    if(!token) {\r\n\r\n        return res.status(401).json({ message: 'No token, authorization denied' });\r\n    }\r\n\r\n    //Verify token\r\n    try {\r\n\r\n        const decoded = jwt.verify(token, config.get('jwtSecret'));\r\n\r\n        req.user = decoded.user;\r\n        next();\r\n\r\n\r\n    }catch(err) {\r\n\r\n      res.status(401).json({ message: 'Token is not valid' });\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"script"}